[{emq_web_hook,
     [{url,"http://127.0.0.1"},
      {rules,
          [{"message.acked","{\"action\": \"on_message_acked\"}"},
           {"message.delivered","{\"action\": \"on_message_delivered\"}"},
           {"message.publish","{\"action\": \"on_message_publish\"}"},
           {"session.terminated","{\"action\": \"on_session_terminated\"}"},
           {"session.unsubscribed",
            "{\"action\": \"on_session_unsubscribed\"}"},
           {"session.subscribed","{\"action\": \"on_session_subscribed\"}"},
           {"session.created","{\"action\": \"on_session_created\"}"},
           {"client.unsubscribe","{\"action\": \"on_client_unsubscribe\"}"},
           {"client.subscribe","{\"action\": \"on_client_subscribe\"}"},
           {"client.disconnected","{\"action\": \"on_client_disconnected\"}"},
           {"client.connected","{\"action\": \"on_client_connected\"}"}]}]},
 {emq_stomp,
     [{allow_anonymous,true},
      {listener,{61613,[{acceptors,4},{max_clients,512}]}},
      {default_user,[{login,"guest"},{passcode,"guest"}]},
      {frame,
          [{max_headers,10},
           {max_header_length,1024},
           {max_body_length,8192}]}]},
 {emq_sn,
     [{enable_qos3,false},
      {enable_stats,false},
      {gateway_id,1},
      {advertise_duration,900},
      {port,1884},
      {username,<<"mqtt_sn_user">>},
      {password,<<"abc">>},
      {predefined,
          [{1,<<"/predefined/topic/name/hello">>},
           {2,<<"/predefined/topic/name/nice">>}]}]},
 {emq_retainer,
     [{expiry_interval,0},
      {max_payload_size,65536},
      {max_message_num,1000000},
      {storage_type,ram}]},
 {emq_reloader,[{logfile,"reloader.log"},{interval,60000}]},
 {emq_recon,[{gc_interval,300000}]},
 {emq_dashboard,
     [{default_user_passwd,"5{aWt7YFRY8q%w9#"},
      {default_user_username,"master"},
      {listeners,
          [{https,18084,
               [{sslopts,
                    [{handshake_timeout,15000},
                     {keyfile,
                         "/etc/letsencrypt/live/port.geonni.com/privkey.pem"},
                     {certfile,
                         "/etc/letsencrypt/live/port.geonni.com/cert.pem"},
                     {cacertfile,"/etc/ssl/certs/ca-certificates.crt"},
                     {reuse_sessions,true}]},
                {acceptors,4},
                {max_clients,512},
                {access,[{allow,all}]}]}]}]},
 {emq_coap,
     [{certfile,"etc/certs/cert.pem"},
      {keyfile,"etc/certs/key.pem"},
      {enable_stats,false},
      {keepalive,120},
      {port,5683}]},
 {emq_auth_redis,
     [{acl_cmd,"HGETALL mqtt_acl:%u"},
      {super_cmd,"HGET mqtt_user:%u is_superuser"},
      {auth_cmd,"HMGET mqtt_user:%u password"},
      {server,
          [{pool_size,8},
           {auto_reconnect,1},
           {host,"127.0.0.1"},
           {port,6379},
           {database,0},
           {password,[]}]},
      {password_hash,plain}]},
 {emq_auth_pgsql,
     [{acl_query,
          "select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = '%a' or username = '%u' or username = '$all' or clientid = '%c'"},
      {super_query,
          "select is_superuser from mqtt_user where username = '%u' limit 1"},
      {auth_query,
          "select password from mqtt_user where username = '%u' limit 1"},
      {server,
          [{pool_size,8},
           {auto_reconnect,1},
           {host,"127.0.0.1"},
           {port,5432},
           {username,"root"},
           {password,[]},
           {database,"mqtt"},
           {encoding,utf8},
           {ssl,false},
           {ssl_opts,[]}]},
      {password_hash,sha256}]},
 {emq_auth_mysql,
     [{acl_query,
          "select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = '%a' or username = '%u' or username = '$all' or clientid = '%c'"},
      {super_query,
          "select is_superuser from mqtt_user where username = '%u' limit 1"},
      {auth_query,
          "select password from mqtt_user where username = '%u' limit 1"},
      {server,
          [{pool_size,8},
           {auto_reconnect,1},
           {host,"127.0.0.1"},
           {port,3306},
           {user,[]},
           {password,[]},
           {database,"mqtt"},
           {encoding,utf8},
           {keep_alive,true}]},
      {password_hash,sha256}]},
 {emq_auth_ldap,
     [{auth_dn,"cn=%u,ou=auth,dc=emqtt,dc=com"},
      {ldap,
          [{ssl,false},
           {servers,["127.0.0.1"]},
           {port,389},
           {timeout,30},
           {bind_dn,"cn=root,dc=emqtt,dc=com"},
           {bind_password,"public"}]},
      {password_hash,sha256}]},
 {emq_auth_jwt,[{secret,"emqsecret"}]},
 {emqttd,
     [{plugins_loaded_file,"data/loaded_plugins"},
      {plugins_etc_dir,"etc/plugins/"},
      {broker_sys_interval,60000},
      {conn_force_gc_count,100},
      {websocket_protocol_header,true},
      {cache_acl,true},
      {acl_file,"etc/acl.conf"},
      {acl_nomatch,allow},
      {allow_anonymous,true},
      {protocol,
          [{max_clientid_len,1024},
           {max_packet_size,65536},
           {keepalive_backoff,0.75}]},
      {client,
          [{max_publish_rate,0},
           {client_idle_timeout,30000},
           {client_enable_stats,false}]},
      {session,
          [{max_subscriptions,0},
           {upgrade_qos,false},
           {max_inflight,32},
           {retry_interval,20000},
           {max_awaiting_rel,1000},
           {await_rel_timeout,30000},
           {enable_stats,true},
           {expiry_interval,7200000},
           {ignore_loop_deliver,false}]},
      {mqueue,
          [{priority,[]},
           {type,simple},
           {max_length,1000},
           {low_watermark,0.2},
           {high_watermark,0.6},
           {store_qos0,true}]},
      {pubsub,[{pool_size,8},{async,true}]},
      {bridge,[{max_queue_len,10000},{ping_down_interval,1000}]},
      {listeners,
          [{ssl,8883,
               [{connopts,[]},
                {sockopts,
                    [{backlog,1024},
                     {send_timeout,15000},
                     {send_timeout_close,true},
                     {nodelay,true},
                     {reuseaddr,true}]},
                {sslopts,
                    [{handshake_timeout,15000},
                     {keyfile,
                         "/etc/letsencrypt/live/port.geonni.com/privkey.pem"},
                     {certfile,
                         "/etc/letsencrypt/live/port.geonni.com/cert.pem"},
                     {cacertfile,"/etc/ssl/certs/ca-certificates.crt"},
                     {reuse_sessions,true}]},
                {acceptors,16},
                {max_clients,1024},
                {access,[{allow,all}]}]},
           {wss,8084,
               [{connopts,[]},
                {sockopts,
                    [{backlog,1024},
                     {send_timeout,15000},
                     {send_timeout_close,true},
                     {nodelay,true},
                     {reuseaddr,true}]},
                {sslopts,
                    [{handshake_timeout,15000},
                     {keyfile,
                         "/etc/letsencrypt/live/port.geonni.com/privkey.pem"},
                     {certfile,
                         "/etc/letsencrypt/live/port.geonni.com/cert.pem"},
                     {cacertfile,"/etc/ssl/certs/ca-certificates.crt"},
                     {reuse_sessions,true}]},
                {acceptors,4},
                {max_clients,64},
                {access,[{allow,all}]}]}]},
      {sysmon,
          [{long_gc,false},
           {long_schedule,240},
           {large_heap,8388608},
           {busy_port,false},
           {busy_dist_port,true}]}]},
 {sasl,[{sasl_error_logger,false}]},
 {lager,
     [{error_logger_hwm,1000},
      {error_logger_redirect,true},
      {log_dir,"log"},
      {handlers,
          [{lager_console_backend,[error]},
           {lager_file_backend,
               [{file,"log/error.log"},
                {level,error},
                {size,10485760},
                {date,"$D0"},
                {count,5}]},
           {lager_syslog_backend,["emqttd",local0,error]}]},
      {crash_log,"log/crash.log"}]},
 {kernel,[{inet_dist_listen_max,6379},{inet_dist_listen_min,6369}]},
 {ekka,
     [{cluster_autoheal,true},
      {cluster_autoclean,300000},
      {cluster_name,emqcl},
      {cluster_discovery,{manual,[]}}]},
 {emq_auth_http,
     [{auth_req,
          [{url,"http://127.0.0.1:8080/mqtt/auth"},
           {method,post},
           {params,[{"clientid","%c"},{"username","%u"},{"password","%P"}]}]},
      {super_req,
          [{url,"http://127.0.0.1:8080/mqtt/superuser"},
           {method,post},
           {params,[{"clientid","%c"},{"username","%u"}]}]},
      {acl_req,
          [{url,"http://127.0.0.1:8080/mqtt/acl"},
           {method,get},
           {params,
               [{"access","%A"},
                {"username","%u"},
                {"clientid","%c"},
                {"ipaddr","%a"},
                {"topic","%t"}]}]}]},
 {emq_auth_mongo,
     [{server,
          [{type,single},
           {hosts,["127.0.0.1:27017"]},
           {options,[{pool_size,1},{max_overflow,0}]},
           {worker_options,[{database,<<"mqtt">>},{auth_source,<<"mqtt">>}]},
           {auto_reconnect,1},
           {pool_size,8}]},
      {auth_query,
          [{collection,"mqtt_user"},
           {password_field,[<<"password">>]},
           {password_hash,sha256},
           {selector,"username=%u"}]},
      {super_query,
          [{collection,"mqtt_user"},
           {super_field,"is_superuser"},
           {selector,"username=%u"}]},
      {acl_query,[{collection,"mqtt_acl"},{selector,"username=%u"}]}]},
 {emq_modules,[{modules,[{emq_mod_presence,[{qos,1}]}]}]}].
